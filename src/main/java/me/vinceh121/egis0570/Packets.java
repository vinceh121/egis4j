package me.vinceh121.egis0570;

public final class Packets {

	// @formatter:off
	public static final byte[][] PKG_INIT_INDEV29 = {
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x20, 0x3f },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x58, 0x3f },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x21, 0x09 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x57, 0x09 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x22, 0x03 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x56, 0x03 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x23, 0x01 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x55, 0x01 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x24, 0x01 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x54, 0x01 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x16, 0x3e },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x09, 0x0b },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x14, 0x03 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x15, 0x00 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x02, 0x0f },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x10, 0x00 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x11, 0x38 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x12, 0x00 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x13, 0x71 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x03, (byte) 0x80 },
			{ 0x45, 0x47, 0x49, 0x53, 0x00, 0x02, (byte) 0x80 },
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x02, 0x2f },
			{ 0x45, 0x47, 0x49, 0x53, 0x06, 0x00, (byte) 0xfe } };
	
	public static final byte[][] PKG_REPEAT_INDEV29 = { 
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x02, 0x0f },
			{ 0x45, 0x47, 0x49, 0x53, 0x00, 0x02, 0x0f }, 
			{ 0x45, 0x47, 0x49, 0x53, 0x01, 0x02, 0x2f },
			{ 0x45, 0x47, 0x49, 0x53, 0x06, 0x00, (byte) 0xfe } /* image returned after this packet */
	};

	public static final byte[][] PKG_INIT_VINCEH121 = new byte[][] {
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x11, 0x38 }, // some kind of separation between frames
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x12, 0x0 }, // width
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x13, 0x71 }, // width
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x20, 0x44 }, // also some kind of separation between frames but more white?
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x58, 0x44 }, // same as above?
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x21, 0x9 }, // separation idk
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x57, 0x9 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x22, 0x2 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x56, 0x2 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x23, 0x1 }, // some black line
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x55, 0x1 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x24, 0x1 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x54, 0x1 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x25, 0x0 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x53, 0x0 }, // ^
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x15, 0x0 }, // blackens out the image when != 0
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x16, 0x51 }, // small gain
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x9, 0xa }, // normal gain
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x14, 0x0 }, // large gain
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x2, 0xf }, // ------ maybe finger detection
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x3, 0xffffff80 },
//		{ 0x45, 0x47, 0x49, 0x53, 0x0, 0x2, 0xffffff80 },
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x2, 0x2f }, -----
		{ 0x45, 0x47, 0x49, 0x53, 0x6, 0x0, 0xfffffffe }, // request FE
//		{ 0x45, 0x47, 0x49, 0x53, 0x1, 0x2, 0xf } // maybe finger detection
	};
	
	public static final byte[][] PKG_INIT = Packets.PKG_INIT_VINCEH121;
	public static final byte[][] PKG_REPEAT = Packets.PKG_REPEAT_INDEV29;
	// @formatter:on

}
